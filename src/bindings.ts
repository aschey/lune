// This file has been generated by Specta. DO NOT EDIT.

export type EnumDescriptor = { name: string; values: EnumValueDescriptor[] }

export type Cardinality = "Optional" | "Required" | "Repeated"

export type MessageDescriptor = { name: string; fields: FieldDescriptor[] }

export type MessageKind = { Normal: string } | { Map: { key: string; value: string } }

export type Kind = "Double" | "Float" | "Int32" | "Int64" | "Uint32" | "Uint64" | "Sint32" | "Sint64" | "Fixed32" | "Fixed64" | "Sfixed32" | "Sfixed64" | "Bool" | "String" | "Bytes" | { Message: MessageKind } | { Enum: EnumDescriptor }

export type ServiceDescriptor = { name: string; methods: MethodDescriptor[] }

export type EnumValueDescriptor = { name: string; number: number }

export type FileDescriptor = { name: string; enum_types: EnumDescriptor[]; message_types: MessageDescriptor[]; services: ServiceDescriptor[] }

export type FieldDescriptor = { name: string; number: number; cardinality: Cardinality; kind: Kind; oneof_index: number | null }

export type MethodDescriptor = { name: string; input: MessageDescriptor; output: MessageDescriptor; is_client_streaming: boolean; is_server_streaming: boolean }

export type OneofDescriptor = { name: string; fields: FieldDescriptor[] }

