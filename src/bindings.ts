// This file has been generated by Specta. DO NOT EDIT.

export type Cardinality = "optional" | "required" | "repeated";

export type EnumDescriptor = { name: string; values: EnumValueDescriptor[] };

export type EnumValueDescriptor = { name: string; number: number };

export type FieldDescriptor = {
  name: string;
  number: number;
  cardinality: Cardinality;
  kind: Kind;
};

export type FileDescriptor = {
  name: string;
  enumTypes: EnumDescriptor[];
  messageTypes: MessageDescriptor[];
  services: ServiceDescriptor[];
};

export type Kind =
  | "double"
  | "float"
  | "int32"
  | "int64"
  | "uint32"
  | "uint64"
  | "sint32"
  | "sint64"
  | "fixed32"
  | "fixed64"
  | "sfixed32"
  | "sfixed64"
  | "bool"
  | "string"
  | "bytes"
  | { message: MessageKind }
  | { enum: EnumDescriptor };

export type MessageDescriptor = {
  name: string;
  fields: FieldDescriptor[];
  oneofs: OneofDescriptor[];
};

export type MessageKind =
  | { normal: string }
  | { map: { key: string; value: string } };

export type MethodDescriptor = {
  name: string;
  input: string;
  output: string;
  isClientStreaming: boolean;
  isServerStreaming: boolean;
};

export type OneofDescriptor = { name: string; fields: FieldDescriptor[] };

export type ServiceDescriptor = { name: string; methods: MethodDescriptor[] };
